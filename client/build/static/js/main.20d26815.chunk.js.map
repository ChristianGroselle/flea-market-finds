{"version":3,"sources":["utils/helpers.js","utils/actions.js","components/ProductItem/index.js","utils/queries.js","assets/spinner.gif","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","utils/reducers.js","utils/store.js","pages/Success.js","pages/OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["pluralize","name","count","idbPromise","storeName","method","object","Promise","resolve","reject","db","tx","store","request","window","indexedDB","open","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","UPDATE_PRODUCTS","ADD_TO_CART","ADD_MULTIPLE_TO_CART","REMOVE_FROM_CART","CLEAR_CART","UPDATE_CART_QUANTITY","TOGGLE_CART","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","ProductItem","item","dispatch","useDispatch","state","useSelector","image","price","quantity","cart","className","to","alt","src","onClick","itemInCart","find","cartItem","type","purchaseQuantity","parseInt","product","QUERY_PRODUCTS","gql","QUERY_CHECKOUT","QUERY_CATEGORIES","QUERY_USER","ProductList","currentCategory","useQuery","loading","data","useEffect","products","forEach","then","length","filter","category","map","spinner","CategoryMenu","categories","categoryData","id","CartItem","placeholder","value","onChange","target","role","removeFromCart","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","location","assign","removeItem","stripePromise","loadStripe","Cart","useLazyQuery","getCheckout","toggleCart","res","redirectToCheckout","sessionId","checkout","session","getCart","cartOpen","sum","toFixed","calculateTotal","Auth","loggedIn","productIds","i","push","variables","Home","Detail","useParams","useState","currentProduct","setCurrentProduct","indexedProducts","description","disabled","p","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","props","email","password","formState","setFormState","useMutation","login","error","handleFormSubmit","event","preventDefault","mutationResponse","handleChange","onSubmit","htmlFor","Signup","addUser","firstName","lastName","Nav","href","logout","initialState","reducer","action","newState","createStore","reducers","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.20d26815.chunk.js","sourcesContent":["export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('shop-shop', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction ProductItem(item) {\n  // const [state, dispatch] = useStoreContext();\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/spinner.7e729fec.gif\";","import React, { useEffect } from 'react';\nimport ProductItem from '../ProductItem';\n// import { useStoreContext } from '../../utils/GlobalState';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction ProductList() {\n  // const [state, dispatch] = useStoreContext();\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\n// import { useStoreContext } from '../../utils/GlobalState';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction CategoryMenu() {\n  // const [state, dispatch] = useStoreContext();\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React from 'react';\n// import { useStoreContext } from \"../../utils/GlobalState\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n  \n  // const [, dispatch] = useStoreContext();\n  const dispatch = useDispatch();\n\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\n// import { useStoreContext } from '../../utils/GlobalState';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\n\n// stripePromise returns a promise with the stripe object as soon as the Stripe package loads\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  // const [state, dispatch] = useStoreContext();\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  // We check to see if there is a data object that exists, if so this means that a checkout session was returned from the backend\n  // Then we should redirect to the checkout with a reference to our session id\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  // If the cart's length or if the dispatch function is updated, check to see if the cart is empty.\n  // If so, invoke the getCart method and populate the cart with the existing from the session\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  // When the submit checkout method is invoked, loop through each item in the cart\n  // Add each item id to the productIds array and then invoke the getCheckout query passing an object containing the id for all our products\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          🛒\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {/* Check to see if the user is logged in. If so render a button to check out */}\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          <span role=\"img\" aria-label=\"shocked\">\n            😱\n          </span>\n          You haven't added anything to your cart yet!\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <CategoryMenu />\n      <ProductList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\n// import { useStoreContext } from '../utils/GlobalState';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  // const [state, dispatch] = useStoreContext();\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state);\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{' '}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">Order History</Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">Signup</Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">Login</Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\">\n            🛍️\n          </span>\n          Flea Market Finds\n        </Link>\n      </h1>\n\n      <nav>{showNavigation()}</nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","// import { useReducer } from \"react\";\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART\n} from \"./actions\";\n\nconst initialState = {\n  products: [],\n  cart: [],\n  cartOpen: false,\n  categories: [],\n  currentCategory: '',\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity\n          }\n          return product\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      }\n\n    default:\n      return state;\n  }\n};\n\n// export function useProductReducer(initialState) {\n//   return useReducer(reducer, initialState)\n// }\nexport default reducer;","// Creates a Redux store that holds the state of the app. Only one store should exist.\nimport { createStore } from 'redux';\n\n// Importing the reducer file that is mostly unchanged\nimport reducers from './reducers';\n\nexport default createStore(reducers);","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase!</h2>\n        <h2>You will now be redirected to the home page</h2>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\n// import { StoreProvider } from './utils/GlobalState';\nimport { Provider } from \"react-redux\";\nimport store from \"./utils/store\"\n\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          {/* <StoreProvider> */}\n          <Provider store = { store } >\n            <Nav />\n            <Routes>\n              <Route \n                path=\"/\" \n                element={<Home />} \n              />\n              <Route \n                path=\"/login\" \n                element={<Login />} \n              />\n              <Route \n                path=\"/signup\" \n                element={<Signup />} \n              />\n              <Route \n                path=\"/success\" \n                element={<Success />} \n              />\n              <Route \n                path=\"/orderHistory\" \n                element={<OrderHistory />} \n              />\n              <Route \n                path=\"/products/:id\" \n                element={<Detail />} \n              />\n              <Route \n                path=\"*\" \n                element={<NoMatch />} \n              />\n            </Routes>\n          </Provider>\n          {/* </StoreProvider> */}\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}